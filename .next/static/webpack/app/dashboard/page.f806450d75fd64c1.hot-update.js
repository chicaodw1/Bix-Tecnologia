"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/services/transactionService.tsx":
/*!*********************************************!*\
  !*** ./src/services/transactionService.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchTransactions: () => (/* binding */ fetchTransactions)\n/* harmony export */ });\nconst fetchTransactions = cache(async ()=>{\n    try {\n        const response = await fetch(\"/mock/transactions.json\", {\n            next: {\n                revalidate: 3600\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Erro ao carregar transações\");\n        }\n        const transactions = await response.json();\n        return transactions.map((transaction)=>({\n                ...transaction,\n                date: new Date(Number(transaction.date)).toLocaleDateString(\"pt-BR\", {\n                    timeZone: \"UTC\"\n                }),\n                amount: parseFloat(transaction.amount) / 100\n            }));\n    } catch (error) {\n        console.error(\"Erro ao carregar transações:\", error);\n        return [];\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy90cmFuc2FjdGlvblNlcnZpY2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxvQkFBb0JDLE1BQy9CO0lBQ0UsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSwyQkFBMkI7WUFDdERDLE1BQU07Z0JBQUVDLFlBQVk7WUFBSztRQUMzQjtRQUVBLElBQUksQ0FBQ0gsU0FBU0ksRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtRQUVBLE1BQU1DLGVBQW1DLE1BQU1OLFNBQVNPLElBQUk7UUFFNUQsT0FBT0QsYUFBYUUsR0FBRyxDQUFDLENBQUNDLGNBQWlCO2dCQUN4QyxHQUFHQSxXQUFXO2dCQUNkQyxNQUFNLElBQUlDLEtBQUtDLE9BQU9ILFlBQVlDLElBQUksR0FBR0csa0JBQWtCLENBQUMsU0FBUztvQkFDbkVDLFVBQVU7Z0JBQ1o7Z0JBQ0FDLFFBQVFDLFdBQVdQLFlBQVlNLE1BQU0sSUFBSTtZQUMzQztJQUNGLEVBQUUsT0FBT0UsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsZ0NBQWdDQTtRQUM5QyxPQUFPLEVBQUU7SUFDWDtBQUNGLEdBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmFuY2lzY29jb3N0YS9Eb2N1bWVudHMvRGV2ZWxvcC9CaXgtVGVjbm9sb2dpYS9zcmMvc2VydmljZXMvdHJhbnNhY3Rpb25TZXJ2aWNlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZmV0Y2hUcmFuc2FjdGlvbnMgPSBjYWNoZShcbiAgYXN5bmMgKCk6IFByb21pc2U8UHJvY2Vzc2VkVHJhbnNhY3Rpb25Nb2RlbFtdPiA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCIvbW9jay90cmFuc2FjdGlvbnMuanNvblwiLCB7XG4gICAgICAgIG5leHQ6IHsgcmV2YWxpZGF0ZTogMzYwMCB9LCAvLyDwn5SlIFJldmFsaWRhIGEgY2FkYSAxIGhvcmEgKDM2MDBzKVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJybyBhbyBjYXJyZWdhciB0cmFuc2HDp8O1ZXNcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHRyYW5zYWN0aW9uczogVHJhbnNhY3Rpb25Nb2RlbFtdID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgICByZXR1cm4gdHJhbnNhY3Rpb25zLm1hcCgodHJhbnNhY3Rpb24pID0+ICh7XG4gICAgICAgIC4uLnRyYW5zYWN0aW9uLFxuICAgICAgICBkYXRlOiBuZXcgRGF0ZShOdW1iZXIodHJhbnNhY3Rpb24uZGF0ZSkpLnRvTG9jYWxlRGF0ZVN0cmluZyhcInB0LUJSXCIsIHtcbiAgICAgICAgICB0aW1lWm9uZTogXCJVVENcIixcbiAgICAgICAgfSksXG4gICAgICAgIGFtb3VudDogcGFyc2VGbG9hdCh0cmFuc2FjdGlvbi5hbW91bnQpIC8gMTAwLFxuICAgICAgfSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBjYXJyZWdhciB0cmFuc2HDp8O1ZXM6XCIsIGVycm9yKTtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gIH1cbik7XG4iXSwibmFtZXMiOlsiZmV0Y2hUcmFuc2FjdGlvbnMiLCJjYWNoZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJuZXh0IiwicmV2YWxpZGF0ZSIsIm9rIiwiRXJyb3IiLCJ0cmFuc2FjdGlvbnMiLCJqc29uIiwibWFwIiwidHJhbnNhY3Rpb24iLCJkYXRlIiwiRGF0ZSIsIk51bWJlciIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInRpbWVab25lIiwiYW1vdW50IiwicGFyc2VGbG9hdCIsImVycm9yIiwiY29uc29sZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/transactionService.tsx\n"));

/***/ })

});