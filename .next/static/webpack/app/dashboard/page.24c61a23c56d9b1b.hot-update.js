"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/services/transactionService.tsx":
/*!*********************************************!*\
  !*** ./src/services/transactionService.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchTransactions: () => (/* binding */ fetchTransactions)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n // ðŸ”¥ Cache do Next.js\nconst fetchTransactions = (0,react__WEBPACK_IMPORTED_MODULE_0__.cache)(async ()=>{\n    try {\n        // Simula um fetch local\n        const response = await fetch(\"/mock/transactions.json\", {\n            cache: \"force-cache\"\n        });\n        if (!response.ok) {\n            throw new Error(\"Erro ao carregar transaÃ§Ãµes\");\n        }\n        const transactions = await response.json();\n        return transactions.map((transaction)=>{\n            const dateObj = new Date(Number(transaction.date)); // ðŸ”¹ Corrige conversÃ£o de data\n            const formattedDate = dateObj.toLocaleDateString(\"pt-BR\", {\n                timeZone: \"UTC\"\n            });\n            return {\n                date: formattedDate,\n                amount: parseFloat(transaction.amount) / 100,\n                transaction_type: transaction.transaction_type,\n                currency: transaction.currency.toUpperCase(),\n                account: transaction.account,\n                industry: transaction.industry,\n                state: transaction.state\n            };\n        });\n    } catch (error) {\n        console.error(\"Erro ao carregar transaÃ§Ãµes:\", error);\n        return []; // ðŸ”¥ Retorna um array vazio em caso de erro\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy90cmFuc2FjdGlvblNlcnZpY2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUs4QixDQUFDLHNCQUFzQjtBQUU5QyxNQUFNQyxvQkFBb0JELDRDQUFLQSxDQUNwQztJQUNFLElBQUk7UUFDRix3QkFBd0I7UUFDeEIsTUFBTUUsV0FBVyxNQUFNQyxNQUFNLDJCQUEyQjtZQUN0REgsT0FBTztRQUNUO1FBRUEsSUFBSSxDQUFDRSxTQUFTRSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNO1FBQ2xCO1FBRUEsTUFBTUMsZUFBbUMsTUFBTUosU0FBU0ssSUFBSTtRQUU1RCxPQUFPRCxhQUFhRSxHQUFHLENBQUMsQ0FBQ0M7WUFDdkIsTUFBTUMsVUFBVSxJQUFJQyxLQUFLQyxPQUFPSCxZQUFZSSxJQUFJLElBQUksK0JBQStCO1lBRW5GLE1BQU1DLGdCQUFnQkosUUFBUUssa0JBQWtCLENBQUMsU0FBUztnQkFDeERDLFVBQVU7WUFDWjtZQUVBLE9BQU87Z0JBQ0xILE1BQU1DO2dCQUNORyxRQUFRQyxXQUFXVCxZQUFZUSxNQUFNLElBQUk7Z0JBQ3pDRSxrQkFBa0JWLFlBQVlVLGdCQUFnQjtnQkFDOUNDLFVBQVVYLFlBQVlXLFFBQVEsQ0FBQ0MsV0FBVztnQkFDMUNDLFNBQVNiLFlBQVlhLE9BQU87Z0JBQzVCQyxVQUFVZCxZQUFZYyxRQUFRO2dCQUM5QkMsT0FBT2YsWUFBWWUsS0FBSztZQUMxQjtRQUNGO0lBQ0YsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxnQ0FBZ0NBO1FBQzlDLE9BQU8sRUFBRSxFQUFFLDRDQUE0QztJQUN6RDtBQUNGLEdBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmFuY2lzY29jb3N0YS9Eb2N1bWVudHMvRGV2ZWxvcC9CaXgtVGVjbm9sb2dpYS9zcmMvc2VydmljZXMvdHJhbnNhY3Rpb25TZXJ2aWNlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHJhbnNhY3Rpb25zTW9jayBmcm9tIFwiQC9tb2NrL3RyYW5zYWN0aW9ucy5qc29uXCI7XG5pbXBvcnQge1xuICBQcm9jZXNzZWRUcmFuc2FjdGlvbk1vZGVsLFxuICBUcmFuc2FjdGlvbk1vZGVsLFxufSBmcm9tIFwiQC9tb2RlbHMvdHJhbnNhY3Rpb25Nb2RlbFwiO1xuaW1wb3J0IHsgY2FjaGUgfSBmcm9tIFwicmVhY3RcIjsgLy8g8J+UpSBDYWNoZSBkbyBOZXh0LmpzXG5cbmV4cG9ydCBjb25zdCBmZXRjaFRyYW5zYWN0aW9ucyA9IGNhY2hlKFxuICBhc3luYyAoKTogUHJvbWlzZTxQcm9jZXNzZWRUcmFuc2FjdGlvbk1vZGVsW10+ID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gU2ltdWxhIHVtIGZldGNoIGxvY2FsXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiL21vY2svdHJhbnNhY3Rpb25zLmpzb25cIiwge1xuICAgICAgICBjYWNoZTogXCJmb3JjZS1jYWNoZVwiLCAvLyDwn5SlIENhY2hlIGRvIE5leHQuanMgcGFyYSBTU1JcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm8gYW8gY2FycmVnYXIgdHJhbnNhw6fDtWVzXCIpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB0cmFuc2FjdGlvbnM6IFRyYW5zYWN0aW9uTW9kZWxbXSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgcmV0dXJuIHRyYW5zYWN0aW9ucy5tYXAoKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgICAgIGNvbnN0IGRhdGVPYmogPSBuZXcgRGF0ZShOdW1iZXIodHJhbnNhY3Rpb24uZGF0ZSkpOyAvLyDwn5S5IENvcnJpZ2UgY29udmVyc8OjbyBkZSBkYXRhXG5cbiAgICAgICAgY29uc3QgZm9ybWF0dGVkRGF0ZSA9IGRhdGVPYmoudG9Mb2NhbGVEYXRlU3RyaW5nKFwicHQtQlJcIiwge1xuICAgICAgICAgIHRpbWVab25lOiBcIlVUQ1wiLFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGU6IGZvcm1hdHRlZERhdGUsXG4gICAgICAgICAgYW1vdW50OiBwYXJzZUZsb2F0KHRyYW5zYWN0aW9uLmFtb3VudCkgLyAxMDAsXG4gICAgICAgICAgdHJhbnNhY3Rpb25fdHlwZTogdHJhbnNhY3Rpb24udHJhbnNhY3Rpb25fdHlwZSxcbiAgICAgICAgICBjdXJyZW5jeTogdHJhbnNhY3Rpb24uY3VycmVuY3kudG9VcHBlckNhc2UoKSxcbiAgICAgICAgICBhY2NvdW50OiB0cmFuc2FjdGlvbi5hY2NvdW50LFxuICAgICAgICAgIGluZHVzdHJ5OiB0cmFuc2FjdGlvbi5pbmR1c3RyeSxcbiAgICAgICAgICBzdGF0ZTogdHJhbnNhY3Rpb24uc3RhdGUsXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm8gYW8gY2FycmVnYXIgdHJhbnNhw6fDtWVzOlwiLCBlcnJvcik7XG4gICAgICByZXR1cm4gW107IC8vIPCflKUgUmV0b3JuYSB1bSBhcnJheSB2YXppbyBlbSBjYXNvIGRlIGVycm9cbiAgICB9XG4gIH1cbik7XG4iXSwibmFtZXMiOlsiY2FjaGUiLCJmZXRjaFRyYW5zYWN0aW9ucyIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwidHJhbnNhY3Rpb25zIiwianNvbiIsIm1hcCIsInRyYW5zYWN0aW9uIiwiZGF0ZU9iaiIsIkRhdGUiLCJOdW1iZXIiLCJkYXRlIiwiZm9ybWF0dGVkRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInRpbWVab25lIiwiYW1vdW50IiwicGFyc2VGbG9hdCIsInRyYW5zYWN0aW9uX3R5cGUiLCJjdXJyZW5jeSIsInRvVXBwZXJDYXNlIiwiYWNjb3VudCIsImluZHVzdHJ5Iiwic3RhdGUiLCJlcnJvciIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/transactionService.tsx\n"));

/***/ })

});